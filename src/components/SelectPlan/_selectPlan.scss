@use "../../abstracts/mixins" as *;
@use "../../abstracts/colors" as c;
@use "../../abstracts/variables" as v;
@use "../../base/functions" as func;

.cards-container {
  margin-bottom: 2rem;
  display: grid;
  gap: 1rem;
  @media (width > func.rem(768)) {
    grid-template-columns: repeat(3, 1fr);
  }
}

.card {
  border: 1px solid c.$light-gray;
  padding: 1rem;
  border-radius: 0.5rem;
  transition: v.$main-transition;
  background: transparent;
  outline-offset: 0.25rem;
  @media (width <= func.rem(768)) {
    @include flex(row, flex-start, center);
    gap: 1rem;
  }

  &__text-wrapper {
    text-align: start;
    @media (width > func.rem(768)) {
      margin-top: 3rem;
    }
  }

  &__header {
    color: c.$marine-blue;
    margin-bottom: 0.25em;
  }
  &__price {
    color: c.$cool-gray;
  }

  &.active {
    background: c.$magnolia;
    border-color: c.$purplish-blue;
  }
  &:where(:hover, :focus-visible) {
    background: c.$alabaster;
    border-color: c.$pastel-blue;
  }
}

.switch-container {
  background: c.$magnolia;
  @include flex(row, center, center);
  gap: 1rem;
  padding-block: 1rem;
  border-radius: 0.5rem;
}

.switch {
  position: relative;
  height: 1.4rem;
  width: 2.8rem;
  background: c.$marine-blue;
  border-radius: 9999px;
  transition: v.$main-transition;
  cursor: pointer;

  &__input {
  }
  &__label {
    font-weight: 500;
    color: c.$cool-gray;
    cursor: pointer;
    transition: v.$main-transition;
  }

  &::after {
    position: absolute;
    content: "";
    height: v.$switch-dot-size;
    width: v.$switch-dot-size;
    top: 0.2rem;
    left: 10%;
    background: c.$white;
    border-radius: 50%;
    transition: v.$main-transition;
  }
}

.switch__input--yearly:checked ~ .switch::after {
  translate: calc((2.8rem * 0.8) - v.$switch-dot-size);
}

.switch__input:checked + .switch__label {
  color: c.$marine-blue;
}
